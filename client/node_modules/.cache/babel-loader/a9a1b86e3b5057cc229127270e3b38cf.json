{"ast":null,"code":"import { createContext as e, useContext as r, useReducer as t, createElement as n, useEffect as o, useLayoutEffect as c, useRef as u, useState as s } from \"react\";\nimport { unstable_runWithPriority as i, unstable_NormalPriority as p } from \"scheduler\";\nimport { unstable_batchedUpdates as l } from \"react-dom\";\n\nconst d = Symbol(),\n      f = Symbol(),\n      v = \"undefined\" == typeof window || /ServerSideRendering/.test(window.navigator && window.navigator.userAgent) ? o : c,\n      a = i ? e => i(p, e) : e => e(),\n      w = e => e;\n\nfunction E(r) {\n  const t = e({\n    [d]: {\n      v: {\n        current: r\n      },\n      n: {\n        current: -1\n      },\n      l: new Set(),\n      u: e => e()\n    }\n  });\n  var o;\n  return t[f] = t.Provider, t.Provider = (o = t.Provider, _ref => {\n    let {\n      value: e,\n      children: r\n    } = _ref;\n    const t = u(e),\n          c = u(0),\n          [i, p] = s(null);\n    i && (i(e), p(null));\n    const f = u();\n\n    if (!f.current) {\n      const e = new Set(),\n            r = (r, t) => {\n        l(() => {\n          c.current += 1;\n          const n = {\n            n: c.current\n          };\n          null != t && t.suspense && (n.n *= -1, n.p = new Promise(e => {\n            p(() => r => {\n              n.v = r, delete n.p, e(r);\n            });\n          })), e.forEach(e => e(n)), r();\n        });\n      };\n\n      f.current = {\n        [d]: {\n          v: t,\n          n: c,\n          l: e,\n          u: r\n        }\n      };\n    }\n\n    return v(() => {\n      t.current = e, c.current += 1, a(() => {\n        f.current[d].l.forEach(r => {\n          r({\n            n: c.current,\n            v: e\n          });\n        });\n      });\n    }, [e]), n(o, {\n      value: f.current\n    }, r);\n  }), delete t.Consumer, t;\n}\n\nfunction h(e, n) {\n  const o = r(e)[d];\n  if (\"object\" == typeof process && \"production\" !== process.env.NODE_ENV && !o) throw new Error(\"useContextSelector requires special context\");\n  const {\n    v: {\n      current: c\n    },\n    n: {\n      current: u\n    },\n    l: s\n  } = o,\n        i = n(c),\n        [p, l] = t((e, r) => {\n    if (!r) return [c, i];\n    if (\"p\" in r) throw r.p;\n    if (r.n === u) return Object.is(e[1], i) ? e : [c, i];\n\n    try {\n      if (\"v\" in r) {\n        if (Object.is(e[0], r.v)) return e;\n        const t = n(r.v);\n        return Object.is(e[1], t) ? e : [r.v, t];\n      }\n    } catch (e) {}\n\n    return [...e];\n  }, [c, i]);\n  return Object.is(p[1], i) || l(), v(() => (s.add(l), () => {\n    s.delete(l);\n  }), [s]), p[1];\n}\n\nfunction m(e) {\n  return h(e, w);\n}\n\nfunction b(e) {\n  const t = r(e)[d];\n  if (\"object\" == typeof process && \"production\" !== process.env.NODE_ENV && !t) throw new Error(\"useContextUpdate requires special context\");\n  const {\n    u: n\n  } = t;\n  return n;\n}\n\nconst x = _ref2 => {\n  let {\n    context: e,\n    value: r,\n    children: t\n  } = _ref2;\n  const {\n    [f]: o\n  } = e;\n  if (\"object\" == typeof process && \"production\" !== process.env.NODE_ENV && !o) throw new Error(\"BridgeProvider requires special context\");\n  return n(o, {\n    value: r\n  }, t);\n},\n      j = e => {\n  const t = r(e);\n  if (\"object\" == typeof process && \"production\" !== process.env.NODE_ENV && !t[d]) throw new Error(\"useBridgeValue requires special context\");\n  return t;\n};\n\nexport { x as BridgeProvider, E as createContext, j as useBridgeValue, m as useContext, h as useContextSelector, b as useContextUpdate };","map":{"version":3,"mappings":"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","names":["CONTEXT_VALUE","Symbol","ORIGINAL_PROVIDER","useIsomorphicLayoutEffect","window","test","navigator","userAgent","useEffect","useLayoutEffect","runWithNormalPriority","runWithPriority","thunk","NormalPriority","identity","x","createContext","defaultValue","context","createContextOrig","v","current","n","l","Set","u","f","ProviderOrig","Provider","children","value","valueRef","useRef","versionRef","resolve","setResolve","useState","contextValue","update","options","batchedUpdates","action","suspense","p","r","listeners","forEach","listener","createElement","Consumer","useContextSelector","selector","useContextOrig","process","env","NODE_ENV","Error","version","selected","state","dispatch","useReducer","prev","Object","is","nextSelected","e","add","delete","BridgeProvider","useBridgeValue","bridgeValue"],"sources":["D:\\react_project\\real-time-chat\\client\\node_modules\\use-context-selector\\src\\index.ts"],"sourcesContent":["import {\n  ComponentType,\n  Context as ContextOrig,\n  MutableRefObject,\n  Provider,\n  ReactNode,\n  createElement,\n  createContext as createContextOrig,\n  useContext as useContextOrig,\n  useEffect,\n  useLayoutEffect,\n  useReducer,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  unstable_NormalPriority as NormalPriority,\n  unstable_runWithPriority as runWithPriority,\n} from 'scheduler';\n\nimport { batchedUpdates } from './batchedUpdates';\n\nconst CONTEXT_VALUE = Symbol();\nconst ORIGINAL_PROVIDER = Symbol();\n\nconst isSSR = typeof window === 'undefined'\n  || /ServerSideRendering/.test(window.navigator && window.navigator.userAgent);\n\nconst useIsomorphicLayoutEffect = isSSR ? useEffect : useLayoutEffect;\n\n// for preact that doesn't have runWithPriority\nconst runWithNormalPriority = runWithPriority\n  ? (thunk: () => void) => runWithPriority(NormalPriority, thunk)\n  : (thunk: () => void) => thunk();\n\ntype Version = number;\ntype Listener<Value> = (\n  action: { n: Version, p?: Promise<Value>, v?: Value }\n) => void\n\ntype ContextValue<Value> = {\n  [CONTEXT_VALUE]: {\n    /* \"v\"alue     */ v: MutableRefObject<Value>;\n    /* versio\"n\"   */ n: MutableRefObject<Version>;\n    /* \"l\"isteners */ l: Set<Listener<Value>>;\n    /* \"u\"pdate    */ u: (thunk: () => void, options?: { suspense: boolean }) => void;\n  };\n};\n\nexport interface Context<Value> {\n  Provider: ComponentType<{ value: Value; children: ReactNode }>;\n  displayName?: string;\n}\n\nconst createProvider = <Value>(\n  ProviderOrig: Provider<ContextValue<Value>>,\n) => {\n  const ContextProvider = ({ value, children }: { value: Value; children: ReactNode }) => {\n    const valueRef = useRef(value);\n    const versionRef = useRef(0);\n    const [resolve, setResolve] = useState<((v: Value) => void) | null>(null);\n    if (resolve) {\n      resolve(value);\n      setResolve(null);\n    }\n    const contextValue = useRef<ContextValue<Value>>();\n    if (!contextValue.current) {\n      const listeners = new Set<Listener<Value>>();\n      const update = (thunk: () => void, options?: { suspense: boolean }) => {\n        batchedUpdates(() => {\n          versionRef.current += 1;\n          const action: Parameters<Listener<Value>>[0] = {\n            n: versionRef.current,\n          };\n          if (options?.suspense) {\n            action.n *= -1; // this is intentional to make it temporary version\n            action.p = new Promise<Value>((r) => {\n              setResolve(() => (v: Value) => {\n                action.v = v;\n                delete action.p;\n                r(v);\n              });\n            });\n          }\n          listeners.forEach((listener) => listener(action));\n          thunk();\n        });\n      };\n      contextValue.current = {\n        [CONTEXT_VALUE]: {\n          /* \"v\"alue     */ v: valueRef,\n          /* versio\"n\"   */ n: versionRef,\n          /* \"l\"isteners */ l: listeners,\n          /* \"u\"pdate    */ u: update,\n        },\n      };\n    }\n    useIsomorphicLayoutEffect(() => {\n      valueRef.current = value;\n      versionRef.current += 1;\n      runWithNormalPriority(() => {\n        (contextValue.current as ContextValue<Value>)[CONTEXT_VALUE].l.forEach((listener) => {\n          listener({ n: versionRef.current, v: value });\n        });\n      });\n    }, [value]);\n    return createElement(ProviderOrig, { value: contextValue.current }, children);\n  };\n  return ContextProvider;\n};\n\nconst identity = <T>(x: T) => x;\n\n/**\n * This creates a special context for `useContextSelector`.\n *\n * @example\n * import { createContext } from 'use-context-selector';\n *\n * const PersonContext = createContext({ firstName: '', familyName: '' });\n */\nexport function createContext<Value>(defaultValue: Value) {\n  const context = createContextOrig<ContextValue<Value>>({\n    [CONTEXT_VALUE]: {\n      /* \"v\"alue     */ v: { current: defaultValue },\n      /* versio\"n\"   */ n: { current: -1 },\n      /* \"l\"isteners */ l: new Set(),\n      /* \"u\"pdate    */ u: (f) => f(),\n    },\n  });\n  (context as unknown as {\n    [ORIGINAL_PROVIDER]: Provider<ContextValue<Value>>;\n  })[ORIGINAL_PROVIDER] = context.Provider;\n  (context as unknown as Context<Value>).Provider = createProvider(context.Provider);\n  delete (context as any).Consumer; // no support for Consumer\n  return context as unknown as Context<Value>;\n}\n\n/**\n * This hook returns context selected value by selector.\n *\n * It will only accept context created by `createContext`.\n * It will trigger re-render if only the selected value is referentially changed.\n *\n * The selector should return referentially equal result for same input for better performance.\n *\n * @example\n * import { useContextSelector } from 'use-context-selector';\n *\n * const firstName = useContextSelector(PersonContext, state => state.firstName);\n */\nexport function useContextSelector<Value, Selected>(\n  context: Context<Value>,\n  selector: (value: Value) => Selected,\n) {\n  const contextValue = useContextOrig(\n    context as unknown as ContextOrig<ContextValue<Value>>,\n  )[CONTEXT_VALUE];\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextSelector requires special context');\n    }\n  }\n  const {\n    /* \"v\"alue     */ v: { current: value },\n    /* versio\"n\"   */ n: { current: version },\n    /* \"l\"isteners */ l: listeners,\n  } = contextValue;\n  const selected = selector(value);\n  const [state, dispatch] = useReducer((\n    prev: readonly [Value, Selected],\n    action?: Parameters<Listener<Value>>[0],\n  ) => {\n    if (!action) {\n      // case for `dispatch()` below\n      return [value, selected] as const;\n    }\n    if ('p' in action) {\n      throw action.p;\n    }\n    if (action.n === version) {\n      if (Object.is(prev[1], selected)) {\n        return prev; // bail out\n      }\n      return [value, selected] as const;\n    }\n    try {\n      if ('v' in action) {\n        if (Object.is(prev[0], action.v)) {\n          return prev; // do not update\n        }\n        const nextSelected = selector(action.v);\n        if (Object.is(prev[1], nextSelected)) {\n          return prev; // do not update\n        }\n        return [action.v, nextSelected] as const;\n      }\n    } catch (e) {\n      // ignored (stale props or some other reason)\n    }\n    return [...prev] as const; // schedule update\n  }, [value, selected] as const);\n  if (!Object.is(state[1], selected)) {\n    // schedule re-render\n    // this is safe because it's self contained\n    dispatch();\n  }\n  useIsomorphicLayoutEffect(() => {\n    listeners.add(dispatch);\n    return () => {\n      listeners.delete(dispatch);\n    };\n  }, [listeners]);\n  return state[1];\n}\n\n/**\n * This hook returns the entire context value.\n * Use this instead of React.useContext for consistent behavior.\n *\n * @example\n * import { useContext } from 'use-context-selector';\n *\n * const person = useContext(PersonContext);\n */\nexport function useContext<Value>(context: Context<Value>) {\n  return useContextSelector(context, identity);\n}\n\n/**\n * This hook returns an update function that accepts a thunk function\n *\n * Use this for a function that will change a value in\n * concurrent rendering in React 18.\n * Otherwise, there's no need to use this hook.\n *\n * @example\n * import { useContextUpdate } from 'use-context-selector';\n *\n * const update = useContextUpdate();\n *\n * // Wrap set state function\n * update(() => setState(...));\n *\n * // Experimental suspense mode\n * update(() => setState(...), { suspense: true });\n */\nexport function useContextUpdate<Value>(context: Context<Value>) {\n  const contextValue = useContextOrig(\n    context as unknown as ContextOrig<ContextValue<Value>>,\n  )[CONTEXT_VALUE];\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!contextValue) {\n      throw new Error('useContextUpdate requires special context');\n    }\n  }\n  const { u: update } = contextValue;\n  return update;\n}\n\n/**\n * This is a Provider component for bridging multiple react roots\n *\n * @example\n * const valueToBridge = useBridgeValue(PersonContext);\n * return (\n *   <Renderer>\n *     <BridgeProvider context={PersonContext} value={valueToBridge}>\n *       {children}\n *     </BridgeProvider>\n *   </Renderer>\n * );\n */\nexport const BridgeProvider = ({ context, value, children }:{\n  context: Context<any>;\n  value: any;\n  children: ReactNode;\n}) => {\n  const { [ORIGINAL_PROVIDER]: ProviderOrig } = context as unknown as {\n    [ORIGINAL_PROVIDER]: Provider<unknown>;\n  };\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!ProviderOrig) {\n      throw new Error('BridgeProvider requires special context');\n    }\n  }\n  return createElement(ProviderOrig, { value }, children);\n};\n\n/**\n * This hook return a value for BridgeProvider\n */\nexport const useBridgeValue = (context: Context<any>) => {\n  const bridgeValue = useContextOrig(context as unknown as ContextOrig<ContextValue<unknown>>);\n  if (typeof process === 'object' && process.env.NODE_ENV !== 'production') {\n    if (!bridgeValue[CONTEXT_VALUE]) {\n      throw new Error('useBridgeValue requires special context');\n    }\n  }\n  return bridgeValue as any;\n};\n"]},"metadata":{},"sourceType":"module"}